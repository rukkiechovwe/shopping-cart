{"version":3,"sources":["data.js","components/CartComponent.js","components/Home.js","components/NavBar.js","About.js","App.js","serviceWorker.js","index.js"],"names":["data","id","title","description","price","originalPrice","quantity","CartComponent","useState","sales","setSales","handleQ","item","actionType","Error","className","map","key","onClick","conditionQ","totalItemPrice","newItem","filter","removeItem","reduce","a","b","subTotal","Home","NavBar","navStyle","color","textDecoration","style","to","About","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b495cd2.chunk.js","sourcesContent":["export const data = [\r\n    {\r\n        id: 1,\r\n        title:\"Item Title\",\r\n        description: \"Item with little description\",\r\n        price: 12000,\r\n        originalPrice:12000,\r\n        quantity:1\r\n    },\r\n    {\r\n        id: 2,\r\n        title:\"Item Title\",\r\n        description: \"Item with little description\",\r\n        price: 10000,\r\n        originalPrice:10000,\r\n        quantity:1\r\n    },\r\n    {\r\n        id: 3,\r\n        title:\"Item Title\",\r\n        description: \"Item with little description\",\r\n        price: 18000,\r\n        originalPrice:18000,\r\n        quantity:1\r\n    },\r\n    {\r\n        id: 4,\r\n        title:\"Item Title\",\r\n        description: \"Item with little description\",\r\n        price: 20000,\r\n        originalPrice:20000,\r\n        quantity:1\r\n    },\r\n    {\r\n        id: 5,\r\n        title:\"Item Title\",\r\n        description: \"Item with little description\",\r\n        price: 30000,\r\n        originalPrice:30000,\r\n        quantity:1\r\n    },\r\n    {\r\n        id: 6,\r\n        title:\"Item Title\",\r\n        description: \"Item with little description\",\r\n        price: 8000,\r\n        originalPrice:8000,\r\n        quantity:1\r\n    }\r\n]","import React, { useState } from 'react'\r\nimport { data } from '../data'\r\n\r\nconst CartComponent = ()=> {\r\n    const [sales, setSales] = useState(data);\r\n\r\n    const removeItem = (id) => {\r\n        let newItem = sales.filter((item) => item.id !== id)\r\n        setSales(newItem);\r\n    }\r\n\r\n    const handleQ = (item,actionType) => {\r\n        //please work\r\n        switch (actionType) {\r\n            case 'add':\r\n             item.quantity++;\r\n             item.price = item.quantity * item.originalPrice\r\n             setSales([...sales])                    \r\n            break;\r\n            case 'remove':\r\n                item.quantity--;\r\n                item.price = item.quantity * item.originalPrice\r\n\r\n             setSales([...sales])                \r\n             break;\r\n        \r\n            default:\r\n                throw new Error(actionType + ' required')\r\n        }\r\n    }\r\n\r\n    const totalItemPrice = (price,originalPrice) => {\r\n            if (price < originalPrice) {return originalPrice} else {return price}\r\n    }\r\n    const conditionQ = (quantity) => {\r\n        if(quantity < 1){return quantity = 1} else {return quantity}\r\n    }\r\n\r\n    const subTotal = (sales) => {\r\n        return  sales.reduce((a,b)=>a+b.price,0) //what is this 0 doing,lol\r\n    }\r\n   \r\n    return (\r\n        <div className=\"col cart-con\">\r\n            <h1>Cart</h1>\r\n            <div className=\"col cart-component-div\">\r\n                {\r\n                    sales.map((item) => {\r\n                        const { id, description, price,originalPrice,quantity } = item;\r\n                        return (\r\n                            <div className=\"row\" key={id}>\r\n                                <div className=\"row q-btn\">\r\n                                    <button onClick={() => handleQ(item,'add')}>+</button>\r\n                                    <button onClick={() => handleQ(item,'remove')} >-</button>\r\n                                </div>\r\n                               <div className=\"row cart-text\">\r\n                                    <span className=\"name\">{description}</span>\r\n                                    <span>Qantity: {conditionQ(quantity)}</span>\r\n                                    <span className=\"price\">Price: ₦{totalItemPrice(price,originalPrice)}</span>\r\n                                    {/* <span className=\"price\">Price: ₦{totalItemPrice(item,price)}</span> */}\r\n                               </div>\r\n                                <button onClick={()=> removeItem(id)}>Remove Item</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {sales && <span>subTotal:{subTotal(sales)}</span>} \r\n            {/* what did you do here?\r\n           // is like saying, if sales is not null or undefined, then render the span,lol\r\n            // ohhh, you're the boss  */}\r\n            {/* lol */}\r\n            <button className=\"clear-all\" onClick={() => setSales([])}>Clear Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartComponent\r\n","import React, { useState } from 'react'\r\nimport { data } from '../data'\r\n\r\nconst Home = () => {\r\n    const [sales, setSales] = useState(data);\r\n\r\n    \r\n    return (\r\n            <div className=\"col cart-con\">\r\n                <h1>Cart</h1>\r\n                <div className=\"row cart-div\">\r\n                    {\r\n                        sales.map((item) => {\r\n                            const { id, title, description, price } = item;\r\n                            return (\r\n                                <div className=\"col\" key={id}>\r\n                                    <span className=\"name\">{title}</span>\r\n                                    <span className=\"name\">{description}</span>\r\n                                    <span className=\"price\">₦{price}</span>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './Style.css';\r\nimport {  Link } from 'react-router-dom';\r\n\r\n\r\nconst NavBar = ()=> {\r\n    const navStyle =  {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    }\r\n    return (\r\n        <nav>\r\n            <h3>Logo</h3>\r\n            <ul>\r\n                <li><Link style={navStyle} to=\"/\">Home</Link></li>\r\n                <li><Link style={navStyle} to=\"/about\">About</Link></li>\r\n                <li><Link style={navStyle} to=\"cart\">Cart</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\nimport './App.css';\nimport CartComponent from './components/CartComponent';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport { Route, BrowserRouter as Router, Switch} from 'react-router-dom';\nimport About from './About';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/cart\" component={CartComponent} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}